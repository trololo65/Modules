# for more info: https://murix.ru/files/ftg
# by xadjilut, 2021
# –ò–∑–º–µ–Ω–∏–ª –¥–ª—è –º—É–±–æ—Ç–∞ @trololo_1

from .. import loader, utils
import asyncio

@loader.tds
class FarmMooBotMod(loader.Module):
	"""–î–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ —Ñ–∞—Ä–º–∏–Ω–≥–∞ –º—É–±–æ—Ç–∞.\n –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –º—É—Å, –∫–ª–∏–∫–∞–µ—Ç, –∑–∞—Ç–µ–º –º—É–∫, –∫–ª–∏–∫–∞–µ—Ç. –∏ –≤—Å—ë –ø–æ —Ü–∏–∫–ª—É."""
	strings = {
		'name': 'FarmMooBot',
	}
	
	def __init__(self):
		self.name = self.strings['name']
		
	async def client_ready(self, client, db):
		self.client = client
		self.db = db
		self.moo = 1606812809
		if not self.db.get(self.name, "status", False):
			self.db.set(self.name, 'status', {'status': False, 'time': None, 'btn1': None, 'btn2': None})
					
	async def mbfoncmd(self, message):
		"""–ó–∞–ø—É—Å—Ç–∏—Ç—å –∞–≤—Ç–æ—Ñ–∞—Ä–º–∏–Ω–≥.\n.mbfon {–∏–Ω—Ç–µ—Ä–≤–∞–ª –æ—Ç–ø—Ä–∞–≤–∫–∏} {–ø–µ—Ä–≤–∞—è –∫–Ω–æ–ø–∫–∞} {–≤—Ç–æ—Ä–∞—è –∫–Ω–æ–ø–∫–∞} | –∫–Ω–æ–ø–∫–∏ —É–∫–∞–∑—ã–≤–∞—Ç—å –ø–æ –æ—á–µ—Ä–µ–¥–Ω–æ—Å—Ç–∏."""
		args = utils.get_args_raw(message)
		if not args: return await utils.answer(message, '–ì–¥–µ –∞—Ä–≥—É–º–µ–Ω—Ç—ã?')
		args = args.split(' ')
		if not args[0].isdigit() or not args[1].isdigit() or not args[2].isdigit(): return await utils.answer(message, '–û–¥–∏–Ω –∏–ª–∏ –±–æ–ª–µ–µ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤ —É–∫–∞–∑–∞–Ω –Ω–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ. –í–≤–æ–¥–∏—Ç–µ —Ç–æ–ª—å–∫–æ —á–∏—Å–ª–æ–≤—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è!!')
		status = self.db.get(self.name, "status", False)
		if status['time']: return await utils.answer(message, '–£–∂–µ –∑–∞–ø—É—â–µ–Ω–æ.')
		self.db.set(self.name, "status", {'status': True, 'time': args[0], 'btn1': args[1], 'btn2': args[2]})
		await self.client.send_message(self.moo, '–º—É—Å')
		await utils.answer(message, '–ó–∞–ø—É—â–µ–Ω–æ.')
		
	async def mbfoffcmd(self, message):
		"""–û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∞–≤—Ç–æ—Ñ–∞—Ä–º–∏–Ω."""
		self.db.set(self.name, 'status', {'status': False, 'time': None, 'btn1': None, 'btn2': None})
		await utils.answer(message, '–û—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ.')
	
	async def watcher(self, message):
		try:
			chat = utils.get_chat_id(message)
			if chat != self.moo: return
			args = self.db.get(self.name, 'status', False)
			if not args: return
			if not args['status'] or message.sender_id != self.moo or message.sticker: return
			try:
				if not 'üêÆ' in message.text and '<strong>' in message.text and args['status']: await message.click(int(args['btn1']) - 1)
				await asyncio.sleep(3)
				if args['status'] and not 'üêÆ' in message.text and '<strong>' in message.text: await self.client.send_message(self.moo, '–º—É–∫')
			except:
				if args['status']: await self.client.send_message(self.moo, '–º—É—Å')
				if not 'üêÆ' in message.text and '<strong>' in message.text and args['status']: await message.click(int(args['btn1']) - 1)
			try:
				if 'üêÆ' in message.text or args['status']: await message.click(int(args['btn2']) - 1)
			except:
				if args['status']: await self.client.send_message(self.moo, '–º—É–∫')
				if 'üêÆ' in message.text and args['status']: await message.click(int(args['btn2']) - 1)
			await asyncio.sleep(int(args['time']))
			if args['status'] and 'üêÆ' in message.text: await self.client.send_message(self.moo, '–º—É—Å')
		except: pass
			

		